% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EM aggregation.R, R/fitAggregationFunction.R
\name{fitAggregationFunction}
\alias{fitAggregationFunction}
\title{Fit a Normal mixture model on the data using EM Algorithm}
\usage{
fitAggregationFunction(y_hat, Y, ...)

fitAggregationFunction(y_hat, Y, ...)
}
\arguments{
\item{y_hat}{The predictions output from a model. Note that this is passed as an $NxK$ matrix, where $K$ is the number of predictors.}

\item{Y}{The true Y values for fitting}

\item{...}{Additional arguments to pass to the optim function}

\item{tol}{Convergence tolerance for the EM algorithm. Default is 1e-6.}

\item{max_iter}{Maximum number of iterations for the EM algorithm. Default is 1000.}
}
\description{
Fit a normal mixture that maximizes the log likelihood of the weights
of each method using the Expectation-Maximization (EM) algorithm.

Fit a normal mixture that maximizes the log likelihood of the of the weights of
each method. This uses the base R `optim` function to find the optimal weights
for each method.
}
\examples{
\dontrun{
# Make three small test models for mixing
y_hat1 <- rnorm(1000, 3, 1)
y_hat2 <- rnorm(1000, 3, 1.5)
y_hat3 <- rnorm(1000, 3, 0.5)

y_hat <- cbind(y_hat1, y_hat2, y_hat3)

w <- c(0.5, 0.2, 0.3)
y <- (y_hat \%*\% w + rnorm(1000))[, 1]

model_aggregator <- fitAggregationFunction(y_hat, y)
predict(model_aggregator, y_hat, alpha=0.05)
}
\dontrun{
# Make three small test models for mixing
y_hat1 <- rnorm(1000, 3, 1)
y_hat2 <- rnorm(1000, 3, 1.5)
y_hat3 <- rnorm(1000, 3, 0.5)

y_hat <- cbind(y_hat1, y_hat2, y_hat3)

w <- c(0.5, 0.2, 0.3)
y <- (y_hat \%*\% w + rnorm(1000))[, 1]

model_aggregator <- fitAggregationFunction(y, y_hat)
predict(model_aggregator, y_hat, alpha=0.05)
plot(fitAggregationFunction)
}
}
